# Generated by Django 4.2.10 on 2024-03-01 11:04

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DeviceModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deviceId', models.IntegerField()),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('send_data', models.FloatField()),
                ('size', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='GatewayIdModel',
            fields=[
                ('gateway_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='GatewayModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('link_type', models.CharField(choices=[('DownLink', 'DownLink'), ('UpLink', 'UpLink')], default='DownLink', max_length=20)),
                ('ip_address', models.GenericIPAddressField()),
                ('Gateway_Type', models.IntegerField(choices=[(1, 'X'), (2, 'Y'), (3, 'Z')], default=1)),
                ('frequency', models.FloatField()),
                ('BandWidth', models.IntegerField(choices=[(1, 125), (2, 250), (3, 500)], default=1)),
                ('s_f', models.IntegerField(default=7, validators=[django.core.validators.MinValueValidator(6, message='SF must be greater than or equal to 6'), django.core.validators.MaxValueValidator(12, message='SF must be less than or equal to 12')])),
                ('t_x_power', models.IntegerField(default=18, validators=[django.core.validators.MinValueValidator(17, message='Tx Power must be greater than or equal to 17'), django.core.validators.MaxValueValidator(21, message='Tx Power must be less than or equal to 21')])),
                ('r_x_gain', models.IntegerField(default=18, validators=[django.core.validators.MinValueValidator(17, message='Rx Gain must be greater than or equal to 17'), django.core.validators.MaxValueValidator(21, message='Rx Gain must be less than or equal to 21')])),
                ('a_d_r', models.BooleanField(default=False)),
                ('code_rate', models.IntegerField(default=5, validators=[django.core.validators.MinValueValidator(4, message='ADR must be greater than or equal to 4'), django.core.validators.MaxValueValidator(8, message='ADR must be less than or equal to 8')])),
                ('payload_length', models.IntegerField(default=15, validators=[django.core.validators.MinValueValidator(10, message='Payload Length must be greater than or equal to 10'), django.core.validators.MaxValueValidator(20, message='Payload Length must be less than or equal to 8')])),
                ('c_r_c', models.BooleanField(default=True)),
                ('gateway', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='backend_app.gatewayidmodel')),
            ],
        ),
        migrations.CreateModel(
            name='MqttModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.CharField(max_length=30)),
                ('port', models.IntegerField()),
                ('username', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='NodeModel',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('frequency', models.FloatField()),
                ('status', models.BooleanField(default=False)),
                ('is_blocked', models.BooleanField(default=False)),
                ('node_type', models.IntegerField(choices=[(1, 'Type 1'), (2, 'Type 2'), (3, 'Type 3'), (4, 'Type 4'), (5, 'Type 5')], default=1)),
                ('p_d_r', models.CharField(default='0%', max_length=100)),
                ('gateway', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend_app.gatewaymodel')),
            ],
        ),
        migrations.CreateModel(
            name='PublishTopic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publish_id', models.CharField(max_length=50, unique=True)),
                ('status', models.BooleanField(default=False)),
                ('node_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend_app.nodemodel')),
            ],
        ),
        migrations.AddField(
            model_name='nodemodel',
            name='publish_id',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend_app.publishtopic'),
        ),
        migrations.CreateModel(
            name='authToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_token', models.CharField(max_length=250)),
                ('refresh_token', models.CharField(max_length=250)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auth_tokens', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NodeDataModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(default=django.utils.timezone.now)),
                ('counter', models.IntegerField()),
                ('s_n_r', models.CharField(max_length=100)),
                ('r_s_s_i', models.CharField(max_length=100)),
                ('c_r_c', models.BooleanField(default=True)),
                ('current', models.FloatField(default=0.0)),
                ('voltage', models.FloatField(default=0.0)),
                ('rpm', models.FloatField(default=0.0)),
                ('mpu', models.FloatField(default=0.0)),
                ('node_status', models.BooleanField(default=False)),
                ('NodeId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend_app.nodemodel')),
            ],
            options={
                'ordering': ['-time'],
                'unique_together': {('NodeId', 'time')},
            },
        ),
    ]
